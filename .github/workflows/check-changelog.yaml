name: Changelog Check

on:
    pull_request:
        branches: [master]
        types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]

jobs:
    check-changelog:
        runs-on: aws-runner
        steps:
            - name: Changelog check
              uses: dangoslen/changelog-enforcer@v3
              with:
                  changeLogPath: "CHANGELOG-nightly.md"
                  skipLabels: "skip changelog check"

            - name: Missing Changelog
              uses: actions/github-script@v5
              if: failure()
              env:
                  COMMENT_BODY: "Please add a changelog entry for your changes, under `CHANGELOG-nightly.md`."
                  COMMENT_BODY_SKIP: "This PR has been marked with the `skip changelog check` label, so no changelog entry is required."
                  HAS_SKIP_LABEL: ${{ contains(github.event.pull_request.labels.*.name, 'skip changelog check') }}
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const { COMMENT_BODY, COMMENT_BODY_SKIP, HAS_SKIP_LABEL } = process.env;

                      github.rest.issues.listComments({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo
                      }).then((comments) => {
                        const comment = comments.data.find((comment) => comment.body === COMMENT_BODY || comment.body === COMMENT_BODY_SKIP)
                        if (comment && HAS_SKIP_LABEL && comment.body != COMMENT_BODY_SKIP) {
                          github.rest.issues.updateComment({
                            comment_id: comment.id,
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            body: COMMENT_BODY_SKIP
                          })

                          return
                        } else if (comment) {
                          return;
                        }

                        github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: HAS_SKIP_LABEL ? COMMENT_BODY_SKIP : COMMENT_BODY
                        })
                      })
